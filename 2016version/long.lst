	__n4 = %1 + %3
	__n6 = %2 * %3
	__n8 = %2 * __n4
	__n10 = %2 + __n8
	__n15 = %1 + __n4 + __n10
	__n16 = %1 + __n15
	__n21 = __n6 + __n15
	__n48 = %3 * __n16
	__n84 = __n4 * __n21
	__n96 = %2 * __n48
	__n152 = %2 * __n84 - __n16
	__n384 = __n4 * __n96
	__n512 = %2 * __n16 * __n16
	D2R = 0.39269908
	graphics __n8
	graphics %1
	dim A$( __n96 )
	A$ = "```F`\BF\00\00\00\00\00\00\00\00\00\00\00V\80\BDpV\A8\BDpV\D0\BDpV\F8\BDpV \BEpVH\BEpppppppppppAP\A0"
	A = adr( A$ )
	move A, $A050, 54
	DL = $A050
	dpoke 560, DL
	A$ = "\04\04\0E\0E\1F\01\03\07\0F\03\01\06\1E\0C\04\01>\1C\18\00 8?8 \18\1C>\01\00\04\0C\1E\06\01\03\0F\07\03\01\1F\0E\0E\04\04\0C\0F\0E\0C\08\04\06\0F\0C\10\06\0E\1F \00\01\07?\07\01 \1F\0E\06\00\10\0C\0F\06\04\08\0C\0E\0F\0C"
	PM = $AC00
	move A, PM, 80
	poke 54279, PM / 256
	REM              Tell ANTIC where PM RAM is
	poke 559, 46
	REM                     Enable PM DMA with 2-line res
	poke 53277, %3
	REM                      Enable PM display
	poke 704, __n15
	CHSET = $A200
	SCRN = $BD80
	move $E000, CHSET, __n512
	poke 756, $A2
	move CHSET, CHSET + __n512, $0600
	A$ = "\00\00\0F\0F\07\04\06\03\00\00\F0\F0\E0 0\180\0F\03\03\03\03\04\000\C0\00\00\00\00\80\00\06\02\01\01\01\06\04\00\100\C0@\C0 0\00\00\0C\03\06\05\04\00\00\000\C0`\A0 \00\00 \10\08\04\13\0D\03\04\04\08\10 \C0\B0\C8 \01\03\07\0C\1F\18\18\18\80\C0\E0\F0\F8\C0\C0\C0"
	move A, CHSET + $0108, __n96
	A$ = "\00\01\0F\1F\07\04\06\06\00\80\F0\F8\E0 000\0C\03\03\03\03\04\080\D0\00\00\00\00\C0\00\03\01\01\01\07\04\00\00\00\10\F0@\C0@`\00\00\0E\01\06\05\08\00\00\00p\C0`\A0\10\00\00\10\08\04\03\1D\03\04\08\08\10 \C0\B8\C0 \10\00\03\07\0E\1F\1B\18\00\00\C0\E0p\F8\D8\C0\00"
	move A, CHSET + $0308, __n96
	A$ = "\02\01/\1F'\04\06\0C@\80\F4\F8\E4 0`@0\0F\03\03\04\08\10\000\D0\10\00\C0\00\00\01\01\0B\0E\03\01\03\00\80\00\80\E0\A0\00\00\00\08\06\01\06\05\08\10\00\10`\80`\A0\10\08\00\08\04\03\0D\13\04\08\10\10 \C8\B0\C0 \10\08\00\00\07\0F\1F\1B\03\00\00\00\E00\F8\D8\18\00"
	move A, CHSET + $0508, __n96
	A$ = "\06!/\1F'$\0C\18`\84\F4\F8\E4$`\C0\00\00?\03\05\08\10 \00\00\F0\10\10\E0\00\00\00\08\0F\02\03\02\06\00\C0\80\80\80\E0@\00\00\0C\02\01\06\05\08\10 0@\80`\A0\10\08\04\04\03\0D3\04\08\10  \CC\B0\C0 \10\08\04\00\00\07\0F\1F\03\03\03\00\00\E0\90\F8\18\18\18"
	move A, CHSET + $0708, __n96
	for ROW = %0 to __n4
		for COL = %0 to 7
			dpoke 40 * ROW + SCRN + %2 + COL * %2, ( trunc( rnd * __n6 ) * %2 + $21 + trunc( rnd * __n4 ) * $40 ) * $0101 + $0100
		next COL
	next ROW
	NS = ROW * COL
	'MIN X=48  $30
	'MAX X=200 $C8
	'MIN Y=16  $10
	'MAX Y=100 $64
	dim TRIGTABLE( %1, __n15 )
	for I = %0 to __n15
		TRIGTABLE( %0, I ) = sin( D2R * I )
		TRIGTABLE( %1, I ) = cos( D2R * I )
	next I
	REM ARMADA POSITION COARSE AND FIND, DIRECTION, OLD DIRECTION:APC=0:APF=0:AD=0:ADD=0
	REM ARMADA VERTICAL AND DIRECTION: YA=0:YD=0
	REM FRAME NUMBER AND DIRECTION: FP=0:FD=0
	X = 124
	Y = 95
	NL = %3
	print "}"; SC, NL
	repeat 
		poke 53278, %1
		T0 = T
		T = strig( %0 )
		S0 = S
		S = stick( %0 )
		LR = ( S & __n4 = __n4 ) - ( S & __n8 = __n8 )
		UP = S & %1 = %0
		DN = ( S0 & %2 = %2 ) & ( S & %2 = %0 )
		F = ( T = %0 ) & T0
		ANGLE = ( ANGLE + __n16 + LR + __n8 * DN ) mod __n16
		if UP
			sound %0, 99, %2, __n15
			VANG = ANGLE
			'V=V+VA-CD*V
			VX = TRIGTABLE( %0, VANG ) * 0.2 + VX
			VY = TRIGTABLE( %1, VANG ) * 0.2 + VY
		endif 
		if ( VX <> %0 ) ! ( VY <> %0 )
			VX = VX - 0.02 * VX
			VY = VY - 0.02 * VY
			X = ( X + VX - __n48 + __n152 ) mod __n152 + __n48
			Y = ( Y - VY - __n21 + __n84 ) mod __n84 + __n21
			move PM + __n512, PM + $0201, 127
		endif 
		move ANGLE * 5 + PM, PM + __n512 + trunc( Y ), 5
		if ( FC = %0 ) & F
			FC = __n21
			MA = ANGLE
			MX = X + __n4 + TRIGTABLE( %0, MA ) * %3
			MY = Y + %3 - TRIGTABLE( %1, MA ) * %3
		endif 
		if FC
			sound %0, 50 - %2 * FC, __n10, trunc( FC / %2 )
			FC = FC - %1
			MX = ( TRIGTABLE( %0, MA ) * %3 + MX - __n48 + __n152 ) mod __n152 + __n48
			poke 53252, MX
			poke PM + __n384 + trunc( MY ), %0
			MY = ( MY - TRIGTABLE( %1, MA ) * %3 - __n21 + __n84 ) mod __n84 + __n21
			poke PM + __n384 + trunc( MY ), FC > %0
		endif 
		poke 53248, trunc( X )
		pause %1
		P0PF = peek( 53252 )
		M0PF = peek( 53248 )
		if M0PF
			sound %0, 20, %0, __n15
			MROW = ( MY - 24 - 3.5 * YA ) / __n8
			MCOL = ( MX - __n48 - APF ) / __n16
			dpoke SCRN + %2 + trunc( MROW ) * 40 + trunc( MCOL ) * %2, %0
			FC = %0
			NS = NS - %1
			SC = SC + __n4
			print "}"; SC, NL
			poke PM + __n384 + trunc( MY ), %0
			if NS = %0
				exit 
			endif 
		endif 
		if P0PF
			sound %0, 250, __n10, __n15
			NL = NL - %1
			print "}"; SC, NL
			if FC
				FC = %0
				poke PM + __n384 + trunc( MY ), %0
			endif 
			Y = 95
			VX = %0
			VY = %0
			move PM + __n512, PM + $0201, 127
			pause __n15
		endif 
		FP = ( ( FD = %0 ) - FD ) * %2 + FP
		FD = ( FP > %0 ) & FD ! ( FP = __n6 )
		poke 756, $A2 + FP
		ADD = AD
		if AD
			APF = APF - %1
			if APF = -1
				move SCRN + %2, SCRN, 238
				APF = __n15
				APC = APC - %1
			endif 
			poke $D404, APF
			AD = ( APC > %0 ) ! ( APF > %0 )
		else 
			APF = APF + %1
			if APF = __n16
				-move SCRN, SCRN + %2, 238
				APF = %0
				APC = APC + %1
			endif 
			poke $D404, APF
			AD = ( APC = %1 ) & ( APF = __n15 )
		endif 
		if AD - ADD
			sound %0, 200 - AD * 30, __n10, __n15
			poke DL + 40 + YA, ( YD = %1 ) * $70
			poke DL + __n6 + YA, ( YD = %0 ) * $70
			YA = YA - YD + ( YD = %0 )
			YD = ( YA > %0 ) & YD ! ( YA = __n10 )
		endif 
		sound %0, %0, %0, %0
	until NL = %0
